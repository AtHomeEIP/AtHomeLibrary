image: debian

variables:
  ARDUINO_VERSION: 1.8.5
  ENERGIA_VERSION: 1.6.10E18
  SHARE_PATH: /usr/local/share
  BIN_PATH: /usr/local/bin

buildTests:Arduino:
  stage: build
  before_script:
    - apt update && apt -y install build-essential git xvfb wget xz-utils libxext6 libxtst6 libxrender1 libgtk2.0.0 default-jre
    - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_1.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :1 -ac -screen 0 1280x1024x16"
    - sleep 3
    - export DISPLAY=:1.0
    - wget http://downloads.arduino.cc/arduino-${ARDUINO_VERSION}-linux64.tar.xz
    - tar xf arduino-${ARDUINO_VERSION}-linux64.tar.xz
    - mv arduino-${ARDUINO_VERSION} ${SHARE_PATH}/arduino
    - ln -s ${SHARE_PATH}/arduino/arduino ${BIN_PATH}/
    - git clone https://github.com/Seeed-Studio/Grove_Digital_Light_Sensor.git
    - git clone https://github.com/pjpmarques/ChainableLED.git
    - git clone https://github.com/Seeed-Studio/Grove_Air_quality_Sensor.git
    - git clone https://github.com/bblanchon/ArduinoJson.git
    - git clone https://github.com/mmurdoch/arduinounit.git
    - git clone https://github.com/adafruit/Adafruit_Sensor.git
    - git clone https://github.com/rweather/arduinolibs.git
    - git clone https://github.com/adafruit/Adafruit_TSL2561.git
    - git clone -b testing https://github.com/arkhipenko/TaskScheduler.git
    - ln -s $PWD/Grove_Digital_Light_Sensor ${SHARE_PATH}/arduino/libraries/Grove_Digital_Light_Sensor
    - ln -s $PWD/ChainableLED ${SHARE_PATH}/arduino/libraries/ChainableLED
    - ln -s $PWD/Grove_Air_quality_Sensor ${SHARE_PATH}/arduino/libraries/Grove_Air_quality_Sensor
    - ln -s $PWD/ArduinoJson ${SHARE_PATH}/arduino/libraries/ArduinoJson
    - ln -s $PWD/arduinounit ${SHARE_PATH}/arduino/libraries/ArduinoUnit
    - ln -s $PWD/Adafruit_Sensor ${SHARE_PATH}/arduino/libraries/Adafruit_Sensor
    - ln -s $PWD/arduinolibs/libraries/Crypto ${SHARE_PATH}/arduino/libraries/Crypto
    - ln -s $PWD/Adafruit_TSL2561 ${SHARE_PATH}/arduino/libraries/Adafruit_TSL2561
    - ln -s $PWD/TaskScheduler ${SHARE_PATH}/arduino/libraries/TaskScheduler
    - ln -s $PWD ${SHARE_PATH}/arduino/libraries/AtHome
    - arduino --install-library "Adafruit NeoPixel"
    - arduino --install-boards arduino:sam
    - arduino --install-boards arduino:samd
    # - arduino --install-boards chipKIT:pic32
    - mkdir -p $PWD/test/output/avr/uno # test the most classical arduino
    - mkdir -p $PWD/test/output/avr/leonardo # test avr based arduino with native usb port
    - mkdir -p $PWD/test/output/arm/zero # test official arm cortex m0+ board
    - mkdir -p $PWD/test/output/arm/due # test official arm cortex m3 board
    # - mkdir -p $PWD/test/output/pic32/fubarino_mini # test pic32mx250 based board
  script:
    - arduino --verify --board arduino:avr:uno $PWD/test/1/1.ino --preserve-temp-files --pref build.path=$PWD/test/output/avr/uno/1/
    - arduino --verify --board arduino:avr:leonardo $PWD/test/1/1.ino --preserve-temp-files --pref build.path=$PWD/test/output/avr/leonardo/1/
    - arduino --verify --board arduino:samd:arduino_zero_edbg $PWD/test/1/1.ino --preserve-temp-files --pref build.path=$PWD/test/output/arm/zero/1/
    - arduino --verify --board arduino:sam:arduino_due_x $PWD/test/1/1.ino --preserve-temp-files --pref build.path=$PWD/test/output/arm/due/1/
    - arduino --verify --board arduino:avr:uno $PWD/test/2/2.ino --preserve-temp-files --pref build.path=$PWD/test/output/avr/uno/2/
    - arduino --verify --board arduino:avr:leonardo $PWD/test/2/2.ino --preserve-temp-files --pref build.path=$PWD/test/output/avr/leonardo/2/
    - arduino --verify --board arduino:samd:arduino_zero_edbg $PWD/test/2/2.ino --preserve-temp-files --pref build.path=$PWD/test/output/arm/zero/2/
    - arduino --verify --board arduino:sam:arduino_due_x $PWD/test/2/2.ino --preserve-temp-files --pref build.path=$PWD/test/output/arm/due/2/
    # - arduino --verify --board chipKIT:pic32:fubarino_mini $PWD/test/1/main.ino --preserve-temp-files --pref build.path=$PWD/test/output/pic32/fubarino_mini/
  artifacts:
    paths:
      - "test/output"

buildTests:Energia:
  stage: build
  allow_failure: yes
  before_script:
    - apt update && apt -y install build-essential git xvfb wget xz-utils libxext6 libxtst6 libxrender1 libgtk2.0.0 default-jre
    - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_1.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :1 -ac -screen 0 1280x1024x16"
    - sleep 3
    - export DISPLAY=:1.0
    - wget http://energia.nu/downloads/downloadv4.php?file=energia-${ENERGIA_VERSION}-linux64.tar.xz
    - tar xf energia-${ENERGIA_VERSION}-linux64.tar.xz
    - mv energia-${ENERGIA_VERSION} ${SHARE_PATH}/energia
    - git clone https://github.com/Seeed-Studio/Grove_Digital_Light_Sensor.git
    - git clone https://github.com/pjpmarques/ChainableLED.git
    - git clone https://github.com/Seeed-Studio/Grove_Air_quality_Sensor.git
    - git clone https://github.com/bblanchon/ArduinoJson.git
    - git clone https://github.com/mmurdoch/arduinounit.git
    - git clone https://github.com/adafruit/Adafruit_Sensor.git
    - git clone https://github.com/rweather/arduinolibs.git
    - git clone https://github.com/adafruit/Adafruit_TSL2561.git
    - git clone -b testing https://github.com/arkhipenko/TaskScheduler.git
    - ln -s $PWD/Grove_Digital_Light_Sensor ${SHARE_PATH}/energia/libraries/Grove_Digital_Light_Sensor
    - ln -s $PWD/ChainableLED ${SHARE_PATH}/energia/libraries/ChainableLED
    - ln -s $PWD/Grove_Air_quality_Sensor ${SHARE_PATH}/energia/libraries/Grove_Air_quality_Sensor
    - ln -s $PWD/ArduinoJson ${SHARE_PATH}/energia/libraries/ArduinoJson
    - ln -s $PWD/arduinounit ${SHARE_PATH}/energia/libraries/ArduinoUnit
    - ln -s $PWD/Adafruit_Sensor ${SHARE_PATH}/energia/libraries/Adafruit_Sensor
    - ln -s $PWD/arduinolibs/libraries/Crypto ${SHARE_PATH}/energia/libraries/Crypto
    - ln -s $PWD/Adafruit_TSL2561 ${SHARE_PATH}/energia/libraries/Adafruit_TSL2561
    - ln -s $PWD/TaskScheduler ${SHARE_PATH}/energia/libraries/TaskScheduler
    - ln -s $PWD ${SHARE_PATH}/energia/libraries/AtHome
    - ln -s ${SHARE_PATH}/energia/energia ${BIN_PATH}/
    - ln -s $PWD/Grove_Digital_Light_Sensor ${SHARE_PATH}/energia/libraries/Grove_Digital_Light_Sensor
    - ln -s $PWD/ChainableLED ${SHARE_PATH}/energia/energia/ChainableLED
    - ln -s $PWD/Grove_Air_quality_Sensor ${SHARE_PATH}/energia/libraries/Grove_Air_quality_Sensor
    - ln -s $PWD/ArduinoJson ${SHARE_PATH}/energia/energia/ArduinoJson
    - ln -s $PWD/arduinounit ${SHARE_PATH}/energia/energia/ArduinoUnit
    - ln -s $PWD ${SHARE_PATH}/energia/libraries/AtHome
    # - energia --install-boards energia:msp430
    - energia --install-boards energia:msp432
    - energia --install-library "Adafruit NeoPixel"
    # - cp $PWD/test/platforms/msp432/platform.txt ~/.energia15/packages/hardware/msp432/3.8.0/platform.txt
    # - mkdir -p $PWD/test/output/msp430/launchpad_fr2433 # test msp430fr2433 board
    - mkdir -p $PWD/test/energia/output/msp432 # test msp432 board, it's an arm cortex m4f
  script:
    - energia --verify --board energia:msp432:MSP-EXP432P401R $PWD/test/1/1.ino --preserve-temp-files --pref build.path=$PWD/test/energia/output/msp432/1/
    - energia --verify --board energia:msp432:MSP-EXP432P401R $PWD/test/2/2.ino --preserve-temp-files --pref build.path=$PWD/test/energia/output/msp432/2/
  artifacts:
    paths:
      - "test/energia/output"

buildExamples:Arduino:
  stage: build
  allow_failure: yes
  script:
    - echo "Not yet implemented"
  artifacts:
    paths:
      - "examples/output"

buildExamples:Energia:
  stage: build
  allow_failure: yes
  script:
    - echo "Not yet implemented"
  artifacts:
    paths:
      - "examples/output"

# run tests using the binary built before
test:
  stage: test
  before_script:
    - apt-get update && apt-get install -y libelf-dev gcc-avr avr-libc freeglut3-dev elfutils libelf1 libglib2.0-dev gdb-avr python3 python3-pip psmisc
    - pip3 install PyQt5
    - export LD_LIBRARY_PATH=$PWD/extras/simulator/linux_x64
    - export PATH="$PATH:$PWD/extras/simulator/linux_x64:$PWD/extras/scripts"
    - chmod +x $PWD/extras/scripts/*
    - chmod +x $PWD/extras/simulator/linux_x64/simulator
  script:
    - athome_test $PWD/test/output/avr/uno/1/1.ino.hex
    - athome_test $PWD/test/output/avr/uno/2/2.ino.hex
    # - ./simavr/simavr/run_avr -m atmega328p -f 16000000 $PWD/test/output/avr/uno/1.ino.hex
  artifacts:
    paths:
      - "*.log"

unitTest:
  stage: test
  allow_failure: yes
  script:
    - rm *.log
    - echo "Hello, World! I'm still not implemented"
  artifacts:
    paths:
      - "*.log"

deploy:
  stage: deploy
  script:
    - mkdir AtHome
    - cp -r *.cpp *.h *.hpp library.* examples AtHome
    - echo "Need to implement release on a server"
  artifacts:
    paths:
      - "AtHome"

genDoc:
  stage: build
  when: always
  allow_failure: yes
  before_script:
    - apt-get update && apt-get install -y doxygen graphviz
  script:
    - rm -rf doc/html doc/latex
    - doxygen Doxyfile
  artifacts:
    paths:
      - "doc/html"
      
pages:
  stage: deploy
  when: always
  allow_failure: yes
  dependencies:
    - genDoc
  script:
    - cp -r doc/html public
  artifacts:
    paths:
      - "public"
  only:
    - "master"